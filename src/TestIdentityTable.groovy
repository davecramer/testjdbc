import groovy.sql.Sql

class TestIdentityTable {

    public static void main(String []args) {
        // 1. Paramètres de connexion
        def dbUrl = 'jdbc:postgresql://localhost/test'
        def dbUser = "test"
        def dbPassword = 'test'
        def dbDriver = "org.postgresql.Driver"
        //
        // 2. Connexion
        def sql = Sql.newInstance(dbUrl, dbUser, dbPassword, dbDriver)
        println "Connected"
        //
        // 3. Créer la table si elle n'existe pas
        def schema = 'public'
        def table = 'author'
        sql.execute """
    DROP TABLE IF EXISTS public.author
    """
        sql.execute """
    CREATE TABLE public.author(
      id          INTEGER GENERATED BY DEFAULT AS IDENTITY,
      firstname   VARCHAR(64),
      lastname    VARCHAR(64)
    )
    """
        println "Table $schema.$table created"

        println "\nTable with IDENTITY"
        def md = sql.connection.metaData
        def rs = md.getTables(null, null, 'auth%', ['TABLE'] as String[])
        assert rs.next()
        println 'TABLE_CAT                 = ' + rs.getString('TABLE_CAT')
        println 'TABLE_SCHEM               = ' + rs.getString('TABLE_SCHEM')
        println 'TABLE_NAME                = ' + rs.getString('TABLE_NAME')
        println 'TABLE_TYPE                = ' + rs.getString('TABLE_TYPE')
        println 'REMARKS                   = ' + rs.getString('REMARKS')
        println 'TYPE_CAT                  = ' + rs.getString('TYPE_CAT')
        println 'TYPE_SCHEM                = ' + rs.getString('TYPE_SCHEM')
        println 'TYPE_NAME                 = ' + rs.getString('TYPE_NAME')
        println 'SELF_REFERENCING_COL_NAME = ' + rs.getString('SELF_REFERENCING_COL_NAME')
        println 'REF_GENERATION            = ' + rs.getString('REF_GENERATION')

        sql.execute """
    ALTER TABLE public.author
        ALTER COLUMN id DROP IDENTITY;
    ALTER TABLE public.author
        ALTER COLUMN id DROP NOT NULL;
    """

        println "\nTable without IDENTITY"
        rs = md.getTables(null, null, 'auth%', null)
        assert rs.next()
        println 'TABLE_CAT                 = ' + rs.getString('TABLE_CAT')
        println 'TABLE_SCHEM               = ' + rs.getString('TABLE_SCHEM')
        println 'TABLE_NAME                = ' + rs.getString('TABLE_NAME')
        println 'TABLE_TYPE                = ' + rs.getString('TABLE_TYPE')
        println 'REMARKS                   = ' + rs.getString('REMARKS')
        println 'TYPE_CAT                  = ' + rs.getString('TYPE_CAT')
        println 'TYPE_SCHEM                = ' + rs.getString('TYPE_SCHEM')
        println 'TYPE_NAME                 = ' + rs.getString('TYPE_NAME')
        println 'SELF_REFERENCING_COL_NAME = ' + rs.getString('SELF_REFERENCING_COL_NAME')
        println 'REF_GENERATION            = ' + rs.getString('REF_GENERATION')

        //
        // 9. Fermer la session
        sql.close();
    }
}
